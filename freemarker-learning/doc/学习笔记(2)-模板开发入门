## 1.1  简介

本章内容是对 FreeMarker 进行简略的介绍，后续章节中将会详细展开。
不过没有关系， 只要你阅读了本章节的内容后，你就能够编写简单，但却很有用的 FreeMarker 模板程序了。

1.2  模板  +  数据模型  =   输出

假设你在一个在线商店的应用系统中需要一个 HTML 页面，和下面这个页面类似：

<html>
<head>
<title>Welcome!</title>
</head>
<body>
<h1>Welcome Big Joe!</h1>
<p>Our latest product:
<a  href="products/greenmouse.html">green mouse</a>!
</body>
</html>

在这里，比方说用户名（所有的”Big  Joe”），应该是登录这个网页的访问者的名字，
并 且最新产品的数据应该来自于数据库，这样它们才可以随时进行更新。
这样的情况下，你不 能在 HTML 页面中直接输入登录用户的用户名，最新产品的 URL 和名称，你不能使用静态的 HTML 代码，
那样是不能即时改变的。
对于这个问题，FreeMarker 的解决方案是使用模板来代替静态的 HTML 文本。
模板文件 同样是静态的 HTML 代码，但是除了这些 HTML 代码外，代码中还包括了一些 FreeMarker 指令元素，这些指令就能够做到动态效果。


<html>
<head>
<title>Welcome!</title>
</head>
<body>
<h1>Welcome ${user}!</h1>
<p>Our latest product:
<a  href="${latestProduct.url}">${latestProduct.name}</a>!
</body>
</html>

这个模板存放在 Web 服务器上，看上去像是静态的 HTML 页面。
但不管何时，只要有 人来访问这个页面，FreeMarker 将会介入执行，然后动态转换模板，
用最新的数据内容替换 模板中${…}的部分（例如：用 Big Joe 或者其他的访问者的用户名来代替${user}），
生成普通 的 HTML 文本并发送结果到访问者的 Web 浏览器中去显示。

所以访问者的 Web 浏览器会接 收到类似于第一个 HTML 示例的内容（也就是说，显示普通的 HTML 文本而没有 FreeMarker 的指令），
因为浏览器也不会感知到 FreeMarker 在服务器端被调用了。
模板文件本身（存储 在 Web 服务器端的文件）在这个过程中也不会改变什么，所以这个转换过程发生在一次又 一次的访问中。
这样就保证了显示的信息总是即时的。
现在，也许你已经注意到，该模板并没有包含关于如何找出当前的访问者是谁，
或者是 如何去查询数据库中查找最新的产品的指令。它似乎已经知道了这些数据是什么。
事实也确 实是这样的，在 FreeMarker 背后（确切的说是在 MVC 模式的背后）的重要思想就是表现逻 辑和业务逻辑相分离。
在模板中，只是处理显示相关的问题，也就是视觉设计问题和格式问 题。
所准备要显示的数据（如用户名等）与 FreeMarker 无关，这通常是使用 Java 语言或其 他目的语言来编写的程序。
所以模板开发人员不需要关心这些数值是如何计算出来的。事实
上，在模板保持不变的同时，这些数值的计算方式可以发生根本的变化。
而且，除了模板外， 页面外观发生的变化可以完全不触碰其他任何东西。
当模板开发人员和程序员是不同一个人 的时候，分离带来的好处更是显而易见的。
FreeMarker（还有模板开发人员）并不关心数据是如何计算出来的，FreeMarker 只是知 道真实的数据是什么。
模板能用的所有数据被包装成 data-model 数据模型。数据模型的创建是通过已经存在的程序计算得到的。
至于模板开发人员，数据模型像是树形结构（比如硬 盘上的文件夹和文件），正如本例中的数据模型，就可以如下形式来描述：

root)
|
	+- user = "Big Joe"
	|
	+- latestProduct
		|
		+- url = "products/greenmouse.html"
		|
		+- name = "green mouse"

（为了避免误解：数据模型并不是文本文件，上面所描述的只是一种数据模型的表现形式。
 它来自于 Java 对象，但这会成为 Java 程序员要面对的问题。）
比较之前你在模板中看到的${user}和${latestProduct.name}。
作为一种比喻：数据模型就像计算机文件系统上的内容：根 root 和 latestProduct 对应目录
（文件夹），user，url 和 name 对应文件。
url 和 name 在 latestProduct 目录 中，所以 latestProduct.name 就像是说 latestProduct 目录的 name 一样。 
但是我所说的，这仅仅是个比喻，这里并没有真实的文件和目录。
概括地讲，模板和数据模型是 FreeMarker 所需，并用来生成输出内容的（比如之前展 示的 HTML）：模板+数据模型=输出