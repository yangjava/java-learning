一、DOM

解析器读入整个文档，然后构建一个驻留内存的树结构，使用 DOM 接口来操作这个树结构。

优点：整个文档树在内存中，便于操作；支持删除、修改、重新排列等多种功能；访问效率高。

缺点：将整个文档调入内存（包括无用的节点），浪费时间和空间；使用场合：一旦解析了文档还需多次访问这些数据；硬件资源充足（内存、CPU）




二、SAX
特点：  1、边读边解析，应用于大型XML文档

              2、只支持读

              3、访问效率低

              4、顺序访问
              
   
   
              
              
三、JDOM

JDOM
优点:①是基于树的处理XML的Java API，把树加载在内存中
     ②没有向下兼容的限制，因此比DOM简单
     ③速度快，缺陷少
     ④具有SAX的Java规则
缺点:①不能处理大于内存的文档
     ②JDOM表示XML文档逻辑模型。不能保证每个字节真正变换。
     ③针对实例文档不提供DTD与模式的任何实际模型。
     ④不支持与DOM中相应遍历包
最适合于:JDOM具有树的便利，也有SAX的JAVA规则。在需要平衡时使用





四、DOM4J
DOM4J 是一个非常非常优秀的java XML API，具有性能优异、功能强大和极端易用使用的特点，
同时它也是一个开放源代码的软件。如今你可以看到越来越多的 Java 软件都在使用 DOM4J 来读写 XML，
特别值得一提的是连 Sun 的 JAXM 也在用 DOM4J。 



              