## c3p0实现方式
C3P0有三种方式实现：

##　1.自己动手写代码，实现数据源

在类路径下配置一个属性文件,config.properties，内容如下：

driverClass=com.mysql.jdbc.Driver
jdbcUrl=jdbc:mysql://localhost:3306/jdbc
user=root
password=root

代码:
public class C3p0DataSource1 {

	public static ComboPooledDataSource getDataSource() {
		ComboPooledDataSource cpds =null;
		try {
			Properties props = new Properties();
			InputStream in = Thread.class
					.getResourceAsStream("/config.properties");
			props.load(in);
			in.close();
			cpds = new ComboPooledDataSource();
			cpds.setDriverClass(props.getProperty("driverClass"));
			cpds.setJdbcUrl(props.getProperty("jdbcUrl"));
			cpds.setUser(props.getProperty("user"));
			cpds.setPassword(props.getProperty("password"));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return cpds;
	}
}


也可以这样配置
<config>
<source name="source1">
<property name="user">root</property>
<property name="password">root</property>
<property name="url">jdbc:mysql://localhost:3306/jdbc</property>
<property name="driverClass">com.mysql.jdbc.Driver</property>
</source>
</config>
然后解析XML,获取数据源


##  2.配置默认的熟悉文件
  类路径下提供一个c3p0.properties文件(不能改名)
  
  配置如下：
 
c3p0.driverClass=com.mysql.jdbc.Driver
c3p0.jdbcUrl=jdbc:mysql://localhost:3306/jdbc
c3p0.user=root
c3p0.password=java



public class C3p0DataSource2 {

	public static DataSource getDataSource() {
		DataSource cpds =null;
		try {
			cpds = new ComboPooledDataSource();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return cpds;
	}
}


##　3.路径下提供一个c3p0-config.xml文件 

<c3p0-config>
  <default-config>   
    <property name="user">root</property>
    <property name="password">java</property>
    <property name="driverClass">com.mysql.jdbc.Driver</property>
    <property name="jdbcUrl">jdbc:mysql://localhost:3306/jdbc</property>
 
    <property name="initialPoolSize">10</property>
    <property name="maxIdleTime">30</property>
    <property name="maxPoolSize">100</property>
    <property name="minPoolSize">10</property>
  </default-config>
 
  <named-config name="mySource">
    <property name="user">root</property>
    <property name="password">java</property>
    <property name="driverClass">com.mysql.jdbc.Driver</property>
    <property name="jdbcUrl">jdbc:mysql://localhost:3306/jdbc</property>
 
    <property name="initialPoolSize">10</property>
    <property name="maxIdleTime">30</property>
    <property name="maxPoolSize">100</property>
    <property name="minPoolSize">10</property>
  </named-config>
</c3p0-config>

public class C3p0DataSource3 {

	public static DataSource getDataSource() {
		DataSource cpds =null;
		try {
			cpds = new ComboPooledDataSource();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return cpds;
	}
}


其中的mySource是c3p0-config.xml中named-config的name值。
DataSource的实例使用ComboPooledDataSource来生成的，
这样我们就可以创建一个连接池，从而减少数据库连接时间。


